# By Alexander McKinney (alexander.f.mckinney@durham.ac.uk)
# Computer Systems Summative Assessment Michaelmas Term
# Little Man Computer Base Convertor

# PLAN BEGINS HERE #
# Functions required: #

# Multiply #
# Integer Divide with remainder
# Convert b10 to bX
# Convert bX to b10

# Algorithm MAIN: #
# 1) Input n, a, b
# 2) Input n, a into bX to b10
# 3) Input result, b into b10 to bX
# 4) Output result

# Algorithm MULT #
# 1) Add value to running total
# 2) Repeat until count exceeds second value
# 3) Output total

# Algorithm INT DIV W REMAIN #
# 1) Repeatedly subtract by div and increment count
# 2) Repeat until integer - div < 0
# 3) Output count

# Algorithm BT TO BX #
# 1) Int divide by base**2, base and 1
# 2) Output a*100 + b*10 + c

# Algorithm BX TO BT #
# 1) Int divide by 100, 10 and 1
# 2) Output a*base**2 + b*base + c

# Some kind of status value is needed to check where to return to
# after completing a function. Needs to store 10 jump locations 
# so therefore 3 status values are required.

# JUMP LOCATIONS

# div flags format: xt or tx, 1st or 2nd
# mult or sq format: xt or tx, sq or mult, 1st or 2nd

# xt_div1 : 00X
# xt_div2 : 01X
# xt_sq   : 000
# xt_mul1 : 011
# xt_mul2 : 010

# tx_sq   : 100
# tx_div1 : 10X
# tx_div2 : 11X
# tx_mul1 : 111
# tx_mul2 : 110

# CODE BEGINS HERE #

