# By Alexander McKinney (alexander.f.mckinney@durham.ac.uk)
# Computer Systems Summative Assessment Michaelmas Term
# Little Man Computer Base Convertor

# PLAN BEGINS HERE #
# Functions required: #

# Multiply #
# Integer Divide with remainder
# Convert b10 to bX
# Convert bX to b10

# Algorithm MAIN: #
# 1) Input n, a, b
# 2) Input n, a into bX to b10
# 3) Input result, b into b10 to bX
# 4) Output result

# Algorithm MULT #
# 1) Add value to running total
# 2) Repeat until count exceeds second value
# 3) Output total

# Algorithm INT DIV W REMAIN #
# 1) Repeatedly subtract by div and increment count
# 2) Repeat until integer - div < 0
# 3) Output count

# Algorithm BT TO BX #
# 1) Int divide by base**2, base and 1
# 2) Output a*100 + b*10 + c

# Algorithm BX TO BT #
# 1) Int divide by 100, 10 and 1
# 2) Output a*base**2 + b*base + c

# Some kind of status value is needed to check where to return to
# after completing a function. Needs to store 10 jump locations 
# so therefore 3 status values are required.

# CODE BEGINS HERE #
	IN
	STO	n
	IN
	STO	a
	BR	abcheck
acheck	IN
	STO	b
	BR	abcheck
	
bcheck	LDA	100
	STO	divval
r1	LDA	r1
	ADD	104	
	STO	eodiv
	BR	div
	LDA	count
	OUT	
	HLT

# Function to check a and b inputs to ensure they are valid #
abcheck	STO	temp
	SUB	010
	SUB	001
	BRP	abrej
	LDA	temp
	SUB	001
	BRZ	abrej
	BRP	abacc
abrej	LDA	999
	OUT	
	HLT
abacc	LDA	000
	STO	temp
	LDA	b
	BRZ	acheck
	BR	bcheck

# Integer divide function #
#
div	LDA	n
	SUB	divval
	BRP	divcon	
eodiv	DAT	000
divcon	STO	n
	LDA	count
	ADD	001
	STO	count
	BR	div

# Variable List #
n	DAT
a	DAT
b	DAT
temp	DAT	000
divval	DAT	000
count	DAT	000
100	DAT	100
010	DAT	010
001	DAT	001
000	DAT	000
999	DAT	999
104	DAT	104



